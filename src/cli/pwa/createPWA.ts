#!/usr/bin/env node

import path from 'path';
import fs from 'fs';
import inquirer from 'inquirer';

const DISPLAY_OPTIONS = ['standalone', 'fullscreen', 'minimal-ui', 'browser'];

async function main() {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∞
  const projectName = process.argv[2];
  if (!projectName) {
    console.error('Please specify the project name');
    process.exit(1);
  }

  const projectDir = path.join(process.cwd(), projectName);
  if (fs.existsSync(projectDir)) {
    console.error(`Directory "${projectName}" already exists.`);
    process.exit(1);
  }

  // –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
  const manifestConfig = await inquirer.prompt([
    {
      type: 'input',
      name: 'name',
      message: 'Application name:',
      default: projectName
    },
    {
      type: 'input',
      name: 'shortName',
      message: 'Short name (for home screen):',
      default: projectName,
      validate: (input) => input.length <= 12 || 'Short name should be 12 characters or less'
    },
    {
      type: 'input',
      name: 'description',
      message: 'Description:',
      default: 'A Progressive Web Application'
    },
    {
      type: 'list',
      name: 'display',
      message: 'Display mode:',
      choices: DISPLAY_OPTIONS,
      default: 'standalone'
    },
    {
      type: 'input',
      name: 'backgroundColor',
      message: 'Background color (hex code):',
      default: '#ffffff',
      validate: (input) => /^#[0-9A-Fa-f]{6}$/.test(input) || 'Please enter a valid hex color code (e.g., #ffffff)'
    },
    {
      type: 'input',
      name: 'themeColor',
      message: 'Theme color (hex code):',
      default: '#2196f3',
      validate: (input) => /^#[0-9A-Fa-f]{6}$/.test(input) || 'Please enter a valid hex color code (e.g., #2196f3)'
    },
    {
      type: 'confirm',
      name: 'generateIcons',
      message: 'Do you want to copy default icons?',
      default: true
    }
  ]);

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
  fs.mkdirSync(projectDir, { recursive: true });

  // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
  const manifest = {
    name: manifestConfig.name,
    short_name: manifestConfig.shortName,
    description: manifestConfig.description,
    start_url: '.',
    display: manifestConfig.display,
    background_color: manifestConfig.backgroundColor,
    theme_color: manifestConfig.themeColor,
    icons: [
      {
        src: 'icons/icon-192x192.png',
        sizes: '192x192',
        type: 'image/png'
      },
      {
        src: 'icons/icon-512x512.png',
        sizes: '512x512',
        type: 'image/png'
      }
    ]
  };

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤
  const templateDir = path.join(__dirname, '..', 'templates');

  // –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
  ['index.html', 'serviceWorker.js', 'offline.html'].forEach(file => {
    const src = path.join(templateDir, file);
    const dest = path.join(projectDir, file);
    if (fs.existsSync(src)) {
      let content = fs.readFileSync(src, 'utf8');
      if (file === 'index.html') {
        content = content.replace(/{{APP_NAME}}/g, manifestConfig.name)
                         .replace(/{{THEME_COLOR}}/g, manifestConfig.themeColor);
      }
      fs.writeFileSync(dest, content);
    }
  });

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π manifest.json
  fs.writeFileSync(
    path.join(projectDir, 'manifest.json'),
    JSON.stringify(manifest, null, 2)
  );

  // –ö–æ–ø–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —ç—Ç—É –æ–ø—Ü–∏—é
  if (manifestConfig.generateIcons) {
    const iconsDir = path.join(templateDir, 'icons');
    const targetIconsDir = path.join(projectDir, 'icons');
    if (fs.existsSync(iconsDir)) {
      fs.mkdirSync(targetIconsDir, { recursive: true });
      fs.readdirSync(iconsDir).forEach(icon => {
        fs.copyFileSync(
          path.join(iconsDir, icon),
          path.join(targetIconsDir, icon)
        );
      });
    }
  }

  console.log(`\nPWA project "${projectName}" created successfully!`);
  console.log('\nNext steps:');
  console.log(`  1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞:\n     cd ${projectName}`);
  console.log('  2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π–ª—ã –ø–æ —Å–≤–æ–∏–º –Ω—É–∂–¥–∞–º');
  console.log('  3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É PWA');
  console.log('  4. –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —Å—Ç–∏–ª–∏ –∏ –ª–æ–≥–∏–∫—É! üöÄ\n');
  console.log('–£–¥–∞—á–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!\n');
}

main();
